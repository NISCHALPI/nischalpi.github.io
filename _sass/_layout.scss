/* Layout styles (wrapper, page-content, section, etc.) from main.scss and enhanced-styles.scss are consolidated here. */

.wrapper {
  padding: 0 1.5rem;
  margin: 0;
  width: 100%;
}

.page-content {
  margin-top: 70px; /* Space for fixed header */
  padding: 2rem 0;
  min-height: calc(100vh - 200px);
}

.section {
  margin-bottom: 4rem;
  position: relative;
  padding: 2rem 0;
}

.home-section {
  padding: 5rem 0;
  position: relative;
  
  &:nth-child(even) {
    background-color: var(--surface-color);
  }
  
  h2 {
    position: relative;
    display: inline-block;
    margin-bottom: 2rem;
    
    &:after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 0;
      width: 60px;
      height: 3px;
      background-color: var(--primary-color);
    }
  }
  
  p.section-intro {
    font-size: 1.2rem;
    color: var(--text-color-soft);
    width: 100%;
    margin-bottom: 3rem;
  }
}

// Special wrapper styling for home page
.page-content .wrapper {
  // Default wrapper styles
  padding: 0 1.5rem;
  margin: 0;
  width: 100%;
}

// Home page specific wrapper - less padding for better full-width display
.hero-section .wrapper,
body.home .page-content .wrapper {
  padding: 0 1rem;
  
  @media (min-width: 768px) {
    padding: 0 2rem;
  }
  
  @media (min-width: 1200px) {
    padding: 0 3rem;
  }
}

// Common layout patterns
.container {
  width: 100%;
  padding-right: 1rem;
  padding-left: 1rem;
  margin: 0;
}

// Media query breakpoints
@media (min-width: 576px) {
  .container {
    width: 100%;
  }
}

@media (min-width: 768px) {
  .container {
    width: 100%;
  }
}

@media (min-width: 992px) {
  .container {
    width: 100%;
  }
}

@media (min-width: 1200px) {
  .container {
    width: 100%;
  }
}

/* Back to Top Button */
.scroll-to-top {
  display: none; 
  position: fixed;
  bottom: $spacing-xl;
  right: $spacing-xl;
  z-index: 1000; // Ensure it's above other content
  background-color: var(--primary-color, $primary-color);
  color: var(--button-text-color, #fff); // Use a variable for button text color if available
  border: none;
  border-radius: $border-radius-round; // Make it circular
  width: 50px;
  height: 50px;
  font-size: 1.25rem; // Icon size
  cursor: pointer;
  box-shadow: $box-shadow-md;
  transition: opacity $transition-medium, background-color $transition-medium, transform $transition-medium;
  // For centering the icon
  align-items: center;
  justify-content: center;
  
  &.visible {
    display: flex; 
  }

  &:hover {
    background-color: var(--primary-color-dark, darken($primary-color, 10%));
    transform: scale(1.1);
  }
  i { // Style for the Font Awesome icon if used
    line-height: 1; // Ensure icon is centered well within the flex container
  }
}