// Animation variables for easy customization
$animation-duration: 0.6s !default;
$animation-easing: cubic-bezier(0.4, 0, 0.2, 1) !default;
$stagger-delay: 0.1s !default;
$particle-count: 20 !default;

// Blog animation specific variables
$blog-fade-duration: 0.8s !default;
$blog-fade-easing: ease-out !default; 
$blog-stagger-delay: 0.1s !default;

// Performance optimization
@mixin performance-optimize {
  will-change: transform, opacity;
  backface-visibility: hidden;
}

// Basic Animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 30px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -30px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-30px, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(30px, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// New animations
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.9;
  }
  100% {
    transform: scale(1);
    opacity: 0.7;
  }
}

@keyframes float {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0);
  }
}

// Common animation classes
.fade-in {
  @include performance-optimize;
  animation: fadeIn $animation-duration $animation-easing forwards;
}

.slide-up {
  @include performance-optimize;
  animation: slideUp $animation-duration $animation-easing forwards;
}

.slide-right {
  @include performance-optimize;
  animation: slideInRight $animation-duration $animation-easing forwards;
}

.scale-in {
  @include performance-optimize;
  animation: scaleIn $animation-duration $animation-easing forwards;
}

.pulse {
  @include performance-optimize;
  animation: pulse 2s $animation-easing infinite;
}

.float {
  @include performance-optimize;
  animation: float 3s $animation-easing infinite;
}

// Hover animations
.hover-lift {
  transition: transform 0.3s $animation-easing;
  &:hover {
    transform: translateY(-5px);
  }
}

.hover-scale {
  transition: transform 0.3s $animation-easing;
  &:hover {
    transform: scale(1.05);
  }
}

// Staggered animations for list items
.stagger-items {
  > * {
    opacity: 0;
    @include performance-optimize;
  }
  
  @for $i from 1 through 10 {
    > *:nth-child(#{$i}) {
      animation: slideUp $animation-duration $animation-easing ($stagger-delay * $i) forwards;
    }
  }
}

// Hero section particles with enhanced effect
.hero-particle {
  position: absolute;
  border-radius: 50%;
  background-color: var(--primary-color);
  opacity: 0.15;
  pointer-events: none;
  @include performance-optimize;
  
  @for $i from 1 through $particle-count {
    &:nth-child(#{$i}) {
      $size: random(10) + 5px;
      width: $size;
      height: $size;
      left: random(100) * 1%;
      top: random(100) * 1%;
      animation: float (random(3) + 2s) $animation-easing infinite (random(1000) * -0.001s);
    }
  }
}

// Responsive animation adjustments
@media (prefers-reduced-motion: reduce) {
  .fade-in,
  .slide-up,
  .slide-right,
  .scale-in,
  .pulse,
  .float,
  .stagger-items > *,
  .hero-particle {
    animation: none !important;
    transform: none !important;
    opacity: 1 !important;
  }
}